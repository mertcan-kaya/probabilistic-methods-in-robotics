clc, clear all, close all

nSmp = 1;

nTotalSmp = 0;

app.prob_type = 1;
app.traj_type = 0;
app.comp_type = 1;

app.dt = 1;
app.dist_type = 0;

app.alpha1 = 0.01;
app.alpha2 = 0.01;
app.alpha3 = 0.01;
app.alpha4 = 0.01;
app.alpha5 = 0.01;
app.alpha6 = 0.01;


if app.traj_type == 0
    nStp = 8;

    x = 1;
    y = 0;
    theta = -pi/2;

    v = pi/4*ones(nStp,1); % m/s
    omega = -pi/4*ones(nStp,1); % rad/s

    x_array     = x*ones(1,nStp);
    y_array     = y*ones(1,nStp);
    theta_array = theta*ones(1,nStp);

    for i = 1:nStp-1
        x_array(i+1) = x_array(i) - (v(i)/omega(i))*(sin(theta_array(i)) - sin(theta_array(i)+omega(i)));
        y_array(i+1) = y_array(i) + (v(i)/omega(i))*(cos(theta_array(i)) - cos(theta_array(i)+omega(i)));
        theta_array(i+1) = theta_array(i) + omega(i);
    end

else
    if app.prob_type == 0
        nStp = 15;

        x_array = [0,2,4,6,8,8,8,8,8,8,8,6,4,2,0];
        y_array = [0,0,0,0,0,0,2,4,6,8,8,8,8,8,8];
        theta_array = [0,0,0,0,0,pi/2,pi/2,pi/2,pi/2,pi/2,pi,pi,pi,pi,pi];
    else
        nStp = 13;

        x_array = [0,2,4,6,8,8,8,8,8,6,4,2,0];
        y_array = [0,0,0,0,0,2,4,6,8,8,8,8,8];
        theta_array = [0,0,0,0,0,pi/2,pi/2,pi/2,pi,pi,pi,pi,pi];
    end

    v = zeros(1,nStp); % m/s
    omega = zeros(1,nStp); % rad/s

    for i = 1:nStp-1
        v(i) = sqrt((x_array(i+1)-x_array(i))^2+(y_array(i+1)-y_array(i))^2); % m/s
        omega(i) = theta_array(i+1)-theta_array(i); % rad/s
    end

end
x_t_array = [x_array;y_array;theta_array];
v_t_array = [v;omega];
            
            
% nStp = 8;
% 
% x = 1;
% y = 0;
% theta = -pi/2;
% 
% v = pi/4*ones(nStp,1); % m/s
% omega = -pi/4*ones(nStp,1); % rad/s
% 
% x_array     = x*ones(nStp,1);
% y_array     = y*ones(nStp,1);
% theta_array = theta*ones(nStp,1);
% 
% for i = 1:nStp-1
%     x_array(i+1) = x_array(i) - (v(i)/omega(i))*(sin(theta_array(i)) - sin(theta_array(i)+omega(i)));
%     y_array(i+1) = y_array(i) + (v(i)/omega(i))*(cos(theta_array(i)) - cos(theta_array(i)+omega(i)));
%     theta_array(i+1) = theta_array(i) + omega(i);
% end

% figure
% ax = gca;
% plot(x_array,y_array,'.k')
% ylim([min(y_array)-0.25 max(y_array)+0.25])
% axis equal


x_t = zeros(3,nSmp*nStp);
for j = 1:nSmp

    x_t(:,1+(j-1)*nStp) = [x_array(1);y_array(1);theta_array(1)];

    k = 1;
    for i = 1+(j-1)*nStp:j*(nStp)-1

        x_tprev = x_t(:,i);

        if app.prob_type == 0
            u_t = [v(k);omega(k)];
            x_t(:,i+1) = sample_motion_model_velocity(app,u_t,x_tprev);
        else
            u_t = [[x_array(k);y_array(k);theta_array(k)];[x_array(k+1);y_array(k+1);theta_array(k+1)]];
            x_t(:,i+1) = sample_motion_model_odometry(app,u_t,x_tprev);
        end

        k = k+1;
    end
end

figure
hold('on')
cmap = jet(nStp);
h = zeros(nStp,1);
for i = 1:nStp
    h(i) = plot(x_t(1,i:nStp:nSmp*nStp),x_t(2,i:nStp:nSmp*nStp),'.','Color', cmap(i, :));
    if i == 1
        set(h(i),'Marker','x')
    end
end
% ylim('auto')
ylim([min(x_t(1,:))-0.25 max(x_t(2,:))+0.25])
axis equal

if app.traj_type == 0
    x_grid = -2:0.01:2;
    y_grid = -2:0.01:2;
else
    x_grid = -1:0.01:10;
    y_grid = -1:0.01:10;
end

p_x_t = zeros(length(x_grid),length(y_grid),nStp);
for k = 1:nStp-1

    u_t = [v(k);omega(k)];
    u_t2 = [x_t_array(:,k);x_t_array(:,k+1)];

    for j = 1:length(x_grid)
        for i = 1:length(y_grid)
            x_t = [x_grid(j);y_grid(i);0];
            if app.prob_type == 1
                p_x_t(i,j,k) = motion_model_velocity(app,x_t,u_t2,x_t_array(:,k));
            else
                p_x_t(i,j,k) = motion_model_odometry(app,x_t,u_t2,x_t_array(:,k));
            end
        end
    end

end

figure
plot(x_t_array(1,:),x_t_array(2,:),'.k')
ylim([min(x_t_array(2,:))-0.25 max(x_t_array(2,:))+0.25])
axis equal
% figure
% surf(x_grid,y_grid,p_x_t_sum)
% shading interp

v = 2;

for k = 1:nStp-1
    figure
    plot(x_t_array(1,:),x_t_array(2,:),'.k')
    hold on
    azSurf1 = surf(x_grid,y_grid,p_x_t(:,:,k));
    xlabel('x')
    ylabel('y')
    shading interp
    set(azSurf1, 'FaceAlpha', 'interp','AlphaData',p_x_t(:,:,k));
    % axis equal
    if app.traj_type == 0
        zlim([0 9])
    else
        zlim([0 5])
    end
    view(v)
end
% figure
% plot(x_t_i(1,:),x_t_i(2,:),'.k')
% hold on
% azSurf1 = surf(x_grid,y_grid,p_x_t(:,:,1));
% xlabel('x')
% ylabel('y')
% shading interp
% set(azSurf1, 'FaceAlpha', 'interp','AlphaData',p_x_t(:,:,1));
% % axis equal
% zlim([0 9])
% view(v)
% figure
% plot(x_t_i(1,:),x_t_i(2,:),'.k')
% hold on
% hold on
% azSurf2 = surf(x_grid,y_grid,p_x_t(:,:,2));
% xlabel('x')
% ylabel('y')
% shading interp
% set(azSurf2, 'FaceAlpha', 'interp','AlphaData',p_x_t(:,:,2));
% % axis equal
% zlim([0 9])
% view(v)
% figure
% plot(x_t_i(1,:),x_t_i(2,:),'.k')
% hold on
% azSurf3 = surf(x_grid,y_grid,p_x_t(:,:,3));
% xlabel('x')
% ylabel('y')
% shading interp
% set(azSurf3, 'FaceAlpha', 'interp','AlphaData',p_x_t(:,:,3));
% % axis equal
% zlim([0 9])
% view(v)
% figure
% plot(x_t_i(1,:),x_t_i(2,:),'.k')
% hold on
% azSurf4 = surf(x_grid,y_grid,p_x_t(:,:,4));
% xlabel('x')
% ylabel('y')
% shading interp
% set(azSurf4, 'FaceAlpha', 'interp','AlphaData',p_x_t(:,:,4));
% % axis equal
% zlim([0 9])
% view(v)
% figure
% plot(x_t_i(1,:),x_t_i(2,:),'.k')
% hold on
% azSurf5 = surf(x_grid,y_grid,p_x_t(:,:,5));
% xlabel('x')
% ylabel('y')
% shading interp
% set(azSurf5, 'FaceAlpha', 'interp','AlphaData',p_x_t(:,:,5));
% % axis equal
% zlim([0 9])
% view(v)
% figure
% plot(x_t_i(1,:),x_t_i(2,:),'.k')
% hold on
% azSurf6 = surf(x_grid,y_grid,p_x_t(:,:,6));
% xlabel('x')
% ylabel('y')
% shading interp
% set(azSurf6, 'FaceAlpha', 'interp','AlphaData',p_x_t(:,:,6));
% % axis equal
% zlim([0 9])
% view(v)
% figure
% plot(x_t_i(1,:),x_t_i(2,:),'.k')
% hold on
% azSurf7 = surf(x_grid,y_grid,p_x_t(:,:,7)');
% xlabel('x')
% ylabel('y')
% shading interp
% set(azSurf7, 'FaceAlpha', 'interp','AlphaData',p_x_t(:,:,7));
% % axis equal
% zlim([0 9])
% view(v)


% x_t_i = zeros(3,nStp);
% x_t_i(:,1) = [x_array(1);y_array(1);theta_array(1)];
% p_x_t = zeros(length(x_grid),length(y_grid),nStp);
% for k = 1:nStp-1
% 
%     u_t = [v(k);omega(k)];
% %     u_t2 = [[x_array(k);y_array(k);theta_array(k)];[x_array(k+1);y_array(k+1);theta_array(k+1)]];
% 
% %     x_t_i(:,k+1) = hypothesized_motion_model_velocity(app,u_t,x_t_i(:,k));
%     
%     for j = 1:length(x_grid)
%         for i = 1:length(y_grid)
%             x_t = [x_grid(j);y_grid(i);0];
%             p_x_t(i,j,k) = motion_model_velocity(app,x_t,u_t,x_t_i(:,k));
% %             p_x_t(i,j,k) = motion_model_odometry(app,x_t,u_t2,x_t_i(:,k));
%         end
%     end
% 
%     x_t_i(:,k+1) = hypothesized_motion_model_velocity(app,u_t,x_t_i(:,k));
% end
% % x_t_i
% % p_x_t_sum = sum(p_x_t,3);
% figure
% plot(x_t_i(1,:),x_t_i(2,:),'.k')
% ylim([min(x_t_i(2,:))-0.25 max(x_t_i(2,:))+0.25])
% axis equal
% % figure
% % surf(x_grid,y_grid,p_x_t_sum)
% % shading interp
% figure
% surf(x_grid,y_grid,p_x_t(:,:,1))
% xlabel('x')
% ylabel('y')
% shading interp
% figure
% hold on
% surf(x_grid,y_grid,p_x_t(:,:,2))
% xlabel('x')
% ylabel('y')
% shading interp
% figure
% surf(x_grid,y_grid,p_x_t(:,:,3))
% xlabel('x')
% ylabel('y')
% shading interp
% figure
% surf(x_grid,y_grid,p_x_t(:,:,4))
% xlabel('x')
% ylabel('y')
% shading interp
% figure
% surf(x_grid,y_grid,p_x_t(:,:,5))
% xlabel('x')
% ylabel('y')
% shading interp
% figure
% surf(x_grid,y_grid,p_x_t(:,:,6))
% xlabel('x')
% ylabel('y')
% shading interp
% figure
% surf(x_grid,y_grid,p_x_t(:,:,7))
% xlabel('x')
% ylabel('y')
% shading interp
%                  